// üü¢ Generics ‚Äì –º–µ—Ö–∞–Ω—ñ–∑–º, —â–æ –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏, —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –∫–ª–∞—Å–∏, —è–∫—ñ –ø—Ä–∞—Ü—é—é—Ç—å –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–∏—Ö, 
// –∑–±–µ—Ä—ñ–≥–∞—é—á–∏ –ø—Ä–∏ —Ü—å–æ–º—É –±–µ–∑–ø–µ–∫—É —Ç–∏–ø—ñ–≤. –î–æ–∑–≤–æ–ª—è—é—Ç—å "–≤—ñ–¥–∫–ª–∞—Å—Ç–∏" –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –¥–æ –º–æ–º–µ–Ω—Ç—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.

// 1. –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –±—É–¥—å-—è–∫–æ–≥–æ —Ç–∏–ø—É
function getFirstElement<T>(arr: T[]): T | undefined {
    return arr.length > 0 ? arr[0] : undefined;
}

const numbers = [1, 2, 3];
const firstNumber = getFirstElement(numbers); // firstNumber –±—É–¥–µ —Ç–∏–ø—É number

const strings = ["a", "b", "c"];
const firstString = getFirstElement(strings); // firstString –±—É–¥–µ —Ç–∏–ø—É string

// –î–∂–µ–Ω–µ—Ä—ñ–∫ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏ (constraints)
interface Lengthwise {
    length: number;
}

function loggingIdentity<T extends Lengthwise>(arg: T): T {
    console.log(arg.length); // –¢–µ–ø–µ—Ä –º–∏ –∑–Ω–∞—î–º–æ, —â–æ T –º–∞—î –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å length
    return arg;
}

loggingIdentity({ length: 10, value: 3 });
// loggingIdentity(3); // –ü–æ–º–∏–ª–∫–∞: number –Ω–µ –º–∞—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ length

// 2. –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏/–¢–∏–ø–∏:
interface Box<T> {
    value: T;
}

const stringBox: Box<string> = { value: "Hello" };
const numberBox: Box<number> = { value: 123 };

// 3. React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ (–ø—Ä–∏–∫–ª–∞–¥ –∑ useState): AppGeneric.tsx